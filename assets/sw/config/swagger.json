{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "## Description\nBuiltin APIs supported via [rk-entry](https://github.com/rookie-ninja/rk-entry).\n\n## APIs\n\n| Name   | Description                               |\n|--------|-------------------------------------------|\n| /alive | Designed for liveness prob of Kubernetes  |\n| /ready | Designed for readiness prob of Kubernetes |\n| /gc    | Trigger GC                                |\n| /info  | Returns application, process, OS info     |\n\n",
        "title": "RK Common Service",
        "contact": {
            "name": "rk-dev",
            "url": "https://github.com/rookie-ninja/rk-entry",
            "email": "lark@pointgoal.io"
        },
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://github.com/rookie-ninja/rk-entry/blob/master/LICENSE.txt"
        },
        "version": "1.0"
    },
    "paths": {
        "/rk/v1/alive": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get application liveness status",
                "operationId": "30002",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.aliveResp"
                        }
                    }
                }
            }
        },
        "/rk/v1/event/activate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Activate event logger level",
                "operationId": "31000",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.eventLevelResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rk.eventErrorResp"
                        }
                    }
                }
            }
        },
        "/rk/v1/event/deactivate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Deactivate event logger level",
                "operationId": "31001",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.eventLevelResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rk.eventErrorResp"
                        }
                    }
                }
            }
        },
        "/rk/v1/gc": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Trigger Gc",
                "operationId": "30003",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.gcResp"
                        }
                    }
                }
            }
        },
        "/rk/v1/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get application and process info",
                "operationId": "30004",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.ProcessInfo"
                        }
                    }
                }
            }
        },
        "/rk/v1/ready": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get application readiness status",
                "operationId": "30001",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.readyResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/rk/v1/viper/dump": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viper"
                ],
                "summary": "Dump viper config values",
                "operationId": "32000",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.viperResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rk.viperError"
                        }
                    }
                }
            }
        },
        "/rk/v1/viper/set": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viper"
                ],
                "summary": "Set viper config values",
                "operationId": "32001",
                "parameters": [
                    {
                        "description": "viperReq",
                        "name": "viperReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rk.viperReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.viperResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rk.viperError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rk.viperError"
                        }
                    }
                }
            }
        },
        "/rk/v1/zap/level": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "zap"
                ],
                "summary": "Get zap logger level",
                "operationId": "30000",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.zapLevelResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rk.zapErrorResp"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "zap"
                ],
                "summary": "Set zap logger level",
                "operationId": "30001",
                "parameters": [
                    {
                        "enum": [
                            "debug",
                            "info",
                            "warn",
                            "error",
                            "dPanic",
                            "panic",
                            "fatal"
                        ],
                        "type": "string",
                        "description": "level",
                        "name": "enumstring",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rk.zapLevelResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rk.zapErrorResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rk.ProcessInfo": {
            "type": "object",
            "properties": {
                "cpuInfo": {
                    "$ref": "#/definitions/rkos.CpuInfo"
                },
                "domain": {
                    "type": "string",
                    "example": "dev"
                },
                "gid": {
                    "type": "string",
                    "example": "20"
                },
                "goEnvInfo": {
                    "$ref": "#/definitions/rkos.GoEnvInfo"
                },
                "memInfo": {
                    "$ref": "#/definitions/rkos.MemInfo"
                },
                "netInfo": {
                    "$ref": "#/definitions/rkos.NetInfo"
                },
                "osInfo": {
                    "$ref": "#/definitions/rkos.OsInfo"
                },
                "serviceName": {
                    "type": "string",
                    "example": "rk-app"
                },
                "serviceVersion": {
                    "type": "string",
                    "example": "dev"
                },
                "startTime": {
                    "type": "string",
                    "example": "2022-03-15T20:43:05+08:00"
                },
                "uid": {
                    "type": "string",
                    "example": "501"
                },
                "upTime": {
                    "type": "string",
                    "example": "1h"
                },
                "username": {
                    "type": "string",
                    "example": "lark"
                }
            }
        },
        "rk.aliveResp": {
            "type": "object",
            "properties": {
                "alive": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "rk.eventErrorResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "rk.eventLevelResp": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                }
            }
        },
        "rk.gcResp": {
            "type": "object",
            "properties": {
                "memStatAfterGc": {
                    "$ref": "#/definitions/rkos.MemInfo"
                },
                "memStatBeforeGc": {
                    "$ref": "#/definitions/rkos.MemInfo"
                }
            }
        },
        "rk.readyResp": {
            "type": "object",
            "properties": {
                "ready": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "rk.viperError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "rk.viperReq": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {}
                        }
                    }
                }
            }
        },
        "rk.viperResp": {
            "type": "object",
            "additionalProperties": true
        },
        "rk.zapErrorResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "rk.zapLevelResp": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                }
            }
        },
        "rkos.CpuInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 8
                }
            }
        },
        "rkos.GoEnvInfo": {
            "type": "object",
            "properties": {
                "goArch": {
                    "type": "string",
                    "example": "amd64"
                },
                "goos": {
                    "type": "string",
                    "example": "darwin"
                },
                "routinesCount": {
                    "type": "integer",
                    "example": 9
                },
                "version": {
                    "type": "string",
                    "example": "go1.17.6"
                }
            }
        },
        "rkos.MemInfo": {
            "type": "object",
            "properties": {
                "forceGcCount": {
                    "type": "integer",
                    "example": 0
                },
                "gcCountTotal": {
                    "type": "integer",
                    "example": 1
                },
                "lastGcTimestamp": {
                    "type": "string",
                    "example": "2022-03-15T20:43:06+08:00"
                },
                "memAllocByte": {
                    "type": "integer",
                    "example": 4182336
                },
                "memUsedMb": {
                    "type": "integer",
                    "example": 3
                },
                "memUsedPercentage": {
                    "type": "number",
                    "example": 0.21
                },
                "sysAllocByte": {
                    "type": "integer",
                    "example": 19876624
                }
            }
        },
        "rkos.NetInfo": {
            "type": "object",
            "properties": {
                "netInterface": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rkos.netInterface"
                    }
                }
            }
        },
        "rkos.OsInfo": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string",
                    "example": "amd64"
                },
                "hostname": {
                    "type": "string",
                    "example": "lark.local"
                },
                "os": {
                    "type": "string",
                    "example": "darwin"
                }
            }
        },
        "rkos.netInterface": {
            "type": "object",
            "properties": {
                "addrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "127.0.0.1/8"
                    ]
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "up"
                    ]
                },
                "hardwareAddr": {
                    "type": "string",
                    "example": ""
                },
                "mtu": {
                    "type": "integer",
                    "example": 16384
                },
                "multicastAddrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "ff02::fb"
                    ]
                },
                "name": {
                    "type": "string",
                    "example": "lo0"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}